{
  "A": [
    {
      "id": "A1",
      "question": "What does this Refal code do?\n\n() sum @ (x . l) (x + sum @ l)\n() sum @ () 0",
      "options": [
        "Computes the product of all numbers in a list",
        "Computes the sum of all numbers in a list",
        "Finds the maximum number in a list",
        "Finds the minimum number in a list"
      ],
      "answer": "1"
    },
    {
      "id": "A2",
      "question": "What does this Refal code do?\n\n() member @ x (x . _) true\n() member @ x (_ . l) (member @ x l)\n() member @ _ () false",
      "options": [
        "Checks if a list contains duplicate elements",
        "Computes the length of a list",
        "Removes an element from a list",
        "Checks if an element is a member of a list"
      ],
      "answer": "3"
    },
    {
      "id": "A3",
      "question": "What does this Refal code do?\n\n() length @ (x . l) (1 + length @ l)\n() length @ () 0",
      "options": [
        "Computes the product of all numbers in a list",
        "Computes the sum of all numbers in a list",
        "Computes the length of a list",
        "Checks if a list is empty"
      ],
      "answer": "2"
    },
    {
      "id": "A4",
      "question": "What does this Refal code do?\n\n() append @ () l l\n() append @ (x . l1) l2 (x . append @ l1 l2)",
      "options": [
        "Concatenates two lists",
        "Reverses a list",
        "Removes an element from a list",
        "Checks if an element is a member of a list"
      ],
      "answer": "0"
    },
    {
      "id": "A5",
      "question": "What does this Refal code do?\n\n() filter @ p () ()\n() filter @ p (x . l) (if p @ x then (x . filter @ p l) else filter @ p l)",
      "options": [
        "Applies a function to every element in a list",
        "Computes the length of a list",
        "Filters a list based on a predicate function",
        "Checks if a list is empty"
      ],
      "answer": "2"
    },
    {
      "id": "A6",
      "question": "What does this Refal code do?\n\n() map @ f () ()\n() map @ f (x . l) (f @ x . map @ f l)",
      "options": [
        "Filters a list based on a predicate function",
        "Applies a function to every element in a list",
        "Computes the sum of all numbers in a list",
        "Checks if a list contains duplicate elements"
      ],
      "answer": "1"
    },
    {
      "id": "A7",
      "question": "What does this Refal code do?\n\n() last @ (x . ()) x\n() last @ (_ . l) (last @ l)",
      "options": [
        "Returns the first element of a list",
        "Computes the length of a list",
        "Checks if a list is empty",
        "Returns the last element of a list"
      ],
      "answer": "3"
    },
    {
      "id": "A8",
      "question": "What does this Refal code do?\n\n() remove @ x () ()\n() remove @ x (x . l) l\n() remove @ x (y . l) (y . remove @ x l)",
      "options": [
        "Removes the first occurrence of an element from a list",
        "Checks if an element is a member of a list",
        "Computes the length of a list",
        "Reverses a list"
      ],
      "answer": "0"
    },
    {
      "id": "A9",
      "question": "What does this Refal code do?\n\n() insert @ x y l (if l = () then (x. ()) else if y <= head @ l then (x . l) else (head @ l . insert @ x y tail @ l))",
      "options": [
        "Removes an element from a list",
        "Filters a list based on a predicate function",
        "Inserts an element into a sorted list",
        "Computes the sum of all numbers in a list"
        ],
        "answer": "2"
    },
    {
      "id": "A10",
      "question": "What does this Refal code do?\n\n() flatten @ () ()\n() flatten @ (x . l) (append @ (flatten @ x) (flatten @ l))",
      "options": [
      "Concatenates two lists",
      "Flattens a nested list",
      "Computes the length of a list",
      "Reverses a list"
      ],
      "answer": "1"
    }
  ],
  "B": [
    {
      "id": "B1",
      "question": "What is the output of the following Refal expression: double @ 5?\n\n() double @ x (x + x)?",
      "answer": "10"
    },
    {
      "id": "B2",
      "question": "What is the output of the following Refal expression: is_even @ 7?\n\n() is_even @ 0 true\n() is_even @ (1 + x) (is_odd @ x)\n() is_odd @ 0 false\n() is_odd @ (1 + x) (is_even @ x)?",
      "answer": "false"
    },
    {
      "id": "B3",
      "question": "What is the output of the following Refal expression: sum_list @ (1 . (2 . (3 . ())))?\n\n() sum_list @ () 0\n() sum_list @ (x . l) (+ x (sum_list @ l))? ",
      "answer": "6"
    },
    {
      "id": "B4",
      "question": "What is the output of the following Refal expression: length_list @ (a . (b . (c . ())))?\n\n() length_list @ () 0\n() length_list @ (x . l) (1 + length_list @ l)?",
      "answer": "3"
    },
    {
      "id": "B5",
      "question": "What is the output of the following Refal expression: reverse_list @ (1 . (2 . (3 . ())))?\n\n() reverse_list @ () ()\n() reverse_list @ (x . l) (append @ (reverse_list @ l) (x . ()))?",
      "answer": "(3 . (2 . (1 . ())))"
    },
    {
      "id": "B6",
      "question": "What is the output of the following Refal expression: last_elem @ (a . (b . (c . ())))?\n\n() last_elem @ (x . ()) x\n() last_elem @ (_ . l) (last_elem @ l)?",
      "answer": "c"
    },
    {
      "id": "B7",
      "question": "What is the output of the following Refal expression: contains @ 2 (1 . (2 . (3 . ())))?\n\n() contains @ x () false\n() contains @ x (x . _) true\n() contains @ x (y . l) (if x = y then true else contains @ x l)?",
      "answer": "true"
    },
    {
      "id": "B8",
      "question": "What is the output of the following Refal expression: count_occurrences @ 1 (1 . (2 . (1 . (3 . (1 . ())))))?\n\n() count_occurrences @ x () 0\n() count_occurrences @ x (x . l) (1 + count_occurrences @ x l)\n() count_occurrences @ x (y . l) (if x = y then 1 + count_occurrences @ x l else count_occurrences @ x l)?",
      "answer": "3"
    },
    {
      "id": "B9",
      "question": "What is the output of the following Refal expression: max_elem @ (3 . (5 . (2 . (7 . (1 . ())))))?\n\n() max_elem @ (x . ()) x\n() max_elem @ (x . l) (if x > max_elem @ l then x else max_elem @ l)?",
      "answer": "7"
    },
    {
      "id": "B10",
      "question": "What is the output of the following Refal expression: remove_first @ 2 (1 . (2 . (3 . (2 . (4 . ())))))?\n\n() remove_first @ x () ()\n() remove_first @ x (x . l) l\n() remove_first @ x (y . l) (y . remove_first @ x l)?",
      "answer": "(1 . (3 . (2 . (4 . ()))))"
    }
  ],
  "C": [
    {
      "id": "C1",
      "question": "What is the output of the following Refal expression: double @ 5?\n\n() double @ x (x + x)?",
      "answer": "10"
    },
    {
      "id": "C2",
      "question": "What is the output of the following Refal expression: is_even @ 7?\n\n() is_even @ 0 true\n() is_even @ (1 + x) (is_odd @ x)\n() is_odd @ 0 false\n() is_odd @ (1 + x) (is_even @ x)?",
      "answer": "false"
    },
    {
      "id": "C3",
      "question": "What is the output of the following Refal expression: sum_list @ (1 . (2 . (3 . ())))?\n\n() sum_list @ () 0\n() sum_list @ (x . l) (+ x (sum_list @ l))? ",
      "answer": "6"
    },
    {
      "id": "C4",
      "question": "What is the output of the following Refal expression: length_list @ (a . (b . (c . ())))?\n\n() length_list @ () 0\n() length_list @ (x . l) (1 + length_list @ l)?",
      "answer": "3"
    },
    {
      "id": "C5",
      "question": "What is the output of the following Refal expression: reverse_list @ (1 . (2 . (3 . ())))?\n\n() reverse_list @ () ()\n() reverse_list @ (x . l) (append @ (reverse_list @ l) (x . ()))?",
      "answer": "(3 . (2 . (1 . ())))"
    },
    {
      "id": "C6",
      "question": "What is the output of the following Refal expression: last_elem @ (a . (b . (c . ())))?\n\n() last_elem @ (x . ()) x\n() last_elem @ (_ . l) (last_elem @ l)?",
      "answer": "c"
    },
    {
      "id": "C7",
      "question": "What is the output of the following Refal expression: contains @ 2 (1 . (2 . (3 . ())))?\n\n() contains @ x () false\n() contains @ x (x . _) true\n() contains @ x (y . l) (if x = y then true else contains @ x l)?",
      "answer": "true"
    },
    {
      "id": "B8",
      "question": "What is the output of the following Refal expression: count_occurrences @ 1 (1 . (2 . (1 . (3 . (1 . ())))))?\n\n() count_occurrences @ x () 0\n() count_occurrences @ x (x . l) (1 + count_occurrences @ x l)\n() count_occurrences @ x (y . l) (if x = y then 1 + count_occurrences @ x l else count_occurrences @ x l)?",
      "answer": "3"
    },
    {
      "id": "C9",
      "question": "What is the output of the following Refal expression: max_elem @ (3 . (5 . (2 . (7 . (1 . ())))))?\n\n() max_elem @ (x . ()) x\n() max_elem @ (x . l) (if x > max_elem @ l then x else max_elem @ l)?",
      "answer": "7"
    },
    {
      "id": "C10",
      "question": "What is the output of the following Refal expression: remove_first @ 2 (1 . (2 . (3 . (2 . (4 . ())))))?\n\n() remove_first @ x () ()\n() remove_first @ x (x . l) l\n() remove_first @ x (y . l) (y . remove_first @ x l)?",
      "answer": "(1 . (3 . (2 . (4 . ()))))"
    }
  ]
}
